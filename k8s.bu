variant: fcos
version: 1.3.0
storage:
  files:
    - path: /etc/modules-load.d/k8s.conf
      mode: 0644
      contents:
        inline: |
          br_netfilter
    - path: /etc/sysctl.d/75-k8s.conf
      mode: 0644
      contents:
        inline: |
          net.ipv4.ip_forward = 1
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables = 1
    - path: /root/init-config.yaml
      mode: 0600
      contents:
        inline: |
          apiVersion: kubeadm.k8s.io/v1beta2
          kind: InitConfiguration
          bootstrapTokens:
            - token: "5mylry.qw0t0cwto1x2a4z1"
          nodeRegistration:
            kubeletExtraArgs:
              volume-plugin-dir: "/opt/libexec/kubernetes/kubelet-plugins/volume/exec/"
          ---
          apiVersion: kubeadm.k8s.io/v1beta2
          kind: ClusterConfiguration
          controlPlaneEndpoint: "k8s-masters.k8s.stefany.eu"
          controllerManager:
            extraArgs:
              cluster-cidr: "10.10.0.0/16"
              flex-volume-plugin-dir: "/opt/libexec/kubernetes/kubelet-plugins/volume/exec/"
    - path: /root/join-controller-config.yaml
      mode: 0600
      contents:
        inline: |
          apiVersion: kubeadm.k8s.io/v1beta2
          kind: JoinConfiguration
          nodeRegistration:
            kubeletExtraArgs:
              volume-plugin-dir: "/opt/libexec/kubernetes/kubelet-plugins/volume/exec/"
          discovery:
            bootstrapToken:
              token: "5mylry.qw0t0cwto1x2a4z1"
              apiServerEndpoint: "k8s-masters.k8s.stefany.eu:6443"
              unsafeSkipCAVerification: true
          controlPlane:
    - path: /root/join-worker-config.yaml
      mode: 0600
      contents:
        inline: |
          apiVersion: kubeadm.k8s.io/v1beta2
          kind: JoinConfiguration
          nodeRegistration:
            kubeletExtraArgs:
              volume-plugin-dir: "/opt/libexec/kubernetes/kubelet-plugins/volume/exec/"
          discovery:
            bootstrapToken:
              token: "5mylry.qw0t0cwto1x2a4z1"
              apiServerEndpoint: "k8s-masters.k8s.stefany.eu:6443"
              unsafeSkipCAVerification: true
systemd:
  units:
    - name: docker.socket
      enabled: false
      mask: true
    - name: docker.service
      enabled: false
      mask: true
    - name: containerd.service
      enabled: true
    - name: conntrack.service
      enabled: true
      contents: |
        [Unit]
        Description=conntrack
        Documentation=man:conntrack
        Wants=network-online.target
        After=network-online.target
        ConditionPathExists=!/usr/sbin/conntrack

        [Service]
        Type=oneshot
        ExecStartPre=rpm-ostree install conntrack
        ExecStart=shutdown -r now
        TimeoutSec=900

        [Install]
        WantedBy=multi-user.target
    - name: kubelet.service
      enabled: true
      contents: |
        [Unit]
        Description=kubelet: The Kubernetes Node Agent
        Documentation=https://kubernetes.io/docs/
        Wants=network-online.target
        After=network-online.target conntrack.service

        [Service]
        ExecStart=/usr/bin/kubelet
        Restart=always
        TimeoutSec=900
        StartLimitInterval=0
        RestartSec=10

        [Install]
        WantedBy=multi-user.target
      dropins:
        - name: 10-kubeadm.conf
          contents: |
            # Note: This dropin only works with kubeadm and kubelet v1.11+
            [Service]
            Environment="KUBELET_KUBECONFIG_ARGS=--bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --kubeconfig=/etc/kubernetes/kubelet.conf"
            Environment="KUBELET_CONFIG_ARGS=--config=/var/lib/kubelet/config.yaml"
            # This is a file that "kubeadm init" and "kubeadm join" generates at runtime, populating the KUBELET_KUBEADM_ARGS variable dynamically
            EnvironmentFile=-/var/lib/kubelet/kubeadm-flags.env
            # This is a file that the user can use for overrides of the kubelet args as a last resort. Preferably, the user should use
            # the .NodeRegistration.KubeletExtraArgs object in the configuration files instead. KUBELET_EXTRA_ARGS should be sourced from this file.
            EnvironmentFile=-/etc/sysconfig/kubelet
            ExecStart=
            ExecStart=/usr/local/bin/kubelet $KUBELET_KUBECONFIG_ARGS $KUBELET_CONFIG_ARGS $KUBELET_KUBEADM_ARGS $KUBELET_EXTRA_ARGS
        - name: 00-podman-cleanup.conf
          contents: |
            [Service]
            ExecStartPre=rm -f /etc/cni/net.d/87-podman-bridge.conflist
        - name: 01-kubelet-download.conf
          contents: |
            [Service]
            ExecStartPre=/usr/bin/sh -c "[ ! -f /usr/local/bin/kubelet ] && sleep $[ ( $RANDOM % 120 ) + 1 ] && /usr/bin/curl -sL https://dl.k8s.io/release/v1.21.0/bin/linux/amd64/kubelet -o /usr/local/bin/kubelet && chmod 0755 /usr/local/bin/kubelet || exit 0"
        - name: 02-kubectl-download.conf
          contents: |
            [Service]
            ExecStartPre=/usr/bin/sh -c "[ ! -f /usr/local/bin/kubectl ] && sleep $[ ( $RANDOM % 120 ) + 1 ] && /usr/bin/curl -sL https://dl.k8s.io/release/v1.21.0/bin/linux/amd64/kubectl -o /usr/local/bin/kubectl && chmod 0755 /usr/local/bin/kubectl || exit 0"
        - name: 03-kubeadm-download.conf
          contents: |
            [Service]
            ExecStartPre=/usr/bin/sh -c "[ ! -f /usr/local/bin/kubeadm ] && sleep $[ ( $RANDOM % 120 ) + 1 ] && /usr/bin/curl -sL https://dl.k8s.io/release/v1.21.0/bin/linux/amd64/kubeadm -o /usr/local/bin/kubeadm && chmod 0755 /usr/local/bin/kubeadm || exit 0"
        - name: 04-crictl-download.conf
          contents: |
            [Service]
            ExecStartPre=/usr/bin/sh -c "[ ! -f /usr/local/bin/crictl ] && sleep $[ ( $RANDOM % 120 ) + 1 ] && /usr/bin/curl -sL https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.21.0/crictl-v1.21.0-linux-amd64.tar.gz -o - | /usr/bin/tar xzf - -C /usr/local/bin || exit 0"
        - name: 05-cni-download.conf
          contents: |
            [Service]
            ExecStartPre=/usr/bin/sh -c "[ ! -d /opt/cni/bin ] && /usr/bin/mkdir -pv /opt/cni/bin && /usr/bin/curl -sL https://github.com/containernetworking/plugins/releases/download/v0.9.1/cni-plugins-linux-amd64-v0.9.1.tgz -o - | /usr/bin/tar xzf - -C /opt/cni/bin || exit 0"
        - name: 20-image-pull.conf
          contents: |
            [Service]
            ExecStartPre=/usr/local/bin/kubeadm config images pull
